[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "blitz"
version = "1.0.0"
description = "Battle-Linked Intelligent Tactical Pi Swarm"
readme = "README.md"
authors = [{ name = "Pinewood Robotics" }]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = ["ruff", "pytest", "protol"]

[project.scripts]
blitz-ai-server = "blitz.recognition.detection.image_recognition.src.main:main"
blitz-april-server = "blitz.recognition.position.april.src.main:main"
blitz-position-extrapolator = "blitz.pos_extrapolator.src.main:main"
blitz-watchdog = "blitz.watchdog.main:cli_main"
blitz = "blitz.terminal.main:cli_main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["blitz*"]

[tool.setuptools.package-data]
"blitz" = ["py.typed"]

[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # Do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["blitz"]

[tool.pytest.ini_options]
testpaths = ["src/blitz"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "-ra"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
